/*
 * This file is generated by jOOQ.
*/
package com.taketoritei.order.jooq.tables;


import com.taketoritei.order.jooq.Indexes;
import com.taketoritei.order.jooq.Keys;
import com.taketoritei.order.jooq.Taketori;
import com.taketoritei.order.jooq.tables.records.MAdminRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MAdmin extends TableImpl<MAdminRecord> {

    private static final long serialVersionUID = -1052285662;

    /**
     * The reference instance of <code>taketori.m_admin</code>
     */
    public static final MAdmin M_ADMIN = new MAdmin();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<MAdminRecord> getRecordType() {
        return MAdminRecord.class;
    }

    /**
     * The column <code>taketori.m_admin.admin_id</code>.
     */
    public final TableField<MAdminRecord, String> ADMIN_ID = createField("admin_id", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>taketori.m_admin.password</code>.
     */
    public final TableField<MAdminRecord, String> PASSWORD = createField("password", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>taketori.m_admin.role</code>.
     */
    public final TableField<MAdminRecord, String> ROLE = createField("role", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>taketori.m_admin.admin_name</code>.
     */
    public final TableField<MAdminRecord, String> ADMIN_NAME = createField("admin_name", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>taketori.m_admin.del_flg</code>.
     */
    public final TableField<MAdminRecord, Boolean> DEL_FLG = createField("del_flg", org.jooq.impl.SQLDataType.BOOLEAN, this, "");

    /**
     * The column <code>taketori.m_admin.last_date</code>.
     */
    public final TableField<MAdminRecord, Timestamp> LAST_DATE = createField("last_date", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>taketori.m_admin.last_user</code>.
     */
    public final TableField<MAdminRecord, String> LAST_USER = createField("last_user", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * Create a <code>taketori.m_admin</code> table reference
     */
    public MAdmin() {
        this(DSL.name("m_admin"), null);
    }

    /**
     * Create an aliased <code>taketori.m_admin</code> table reference
     */
    public MAdmin(String alias) {
        this(DSL.name(alias), M_ADMIN);
    }

    /**
     * Create an aliased <code>taketori.m_admin</code> table reference
     */
    public MAdmin(Name alias) {
        this(alias, M_ADMIN);
    }

    private MAdmin(Name alias, Table<MAdminRecord> aliased) {
        this(alias, aliased, null);
    }

    private MAdmin(Name alias, Table<MAdminRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Taketori.TAKETORI;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.M_ADMIN_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<MAdminRecord> getPrimaryKey() {
        return Keys.M_ADMIN_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<MAdminRecord>> getKeys() {
        return Arrays.<UniqueKey<MAdminRecord>>asList(Keys.M_ADMIN_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MAdmin as(String alias) {
        return new MAdmin(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MAdmin as(Name alias) {
        return new MAdmin(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public MAdmin rename(String name) {
        return new MAdmin(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public MAdmin rename(Name name) {
        return new MAdmin(name, null);
    }
}
