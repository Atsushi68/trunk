/*
 * This file is generated by jOOQ.
*/
package com.taketoritei.order.jooq.tables;


import com.taketoritei.order.jooq.Indexes;
import com.taketoritei.order.jooq.Keys;
import com.taketoritei.order.jooq.Taketori;
import com.taketoritei.order.jooq.tables.records.DDiningRecord;

import java.sql.Date;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DDining extends TableImpl<DDiningRecord> {

    private static final long serialVersionUID = -686498078;

    /**
     * The reference instance of <code>taketori.d_dining</code>
     */
    public static final DDining D_DINING = new DDining();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<DDiningRecord> getRecordType() {
        return DDiningRecord.class;
    }

    /**
     * The column <code>taketori.d_dining.id</code>.
     */
    public final TableField<DDiningRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('d_dining_id_seq'::regclass)", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>taketori.d_dining.days</code>.
     */
    public final TableField<DDiningRecord, Date> DAYS = createField("days", org.jooq.impl.SQLDataType.DATE, this, "");

    /**
     * The column <code>taketori.d_dining.room_no</code>.
     */
    public final TableField<DDiningRecord, String> ROOM_NO = createField("room_no", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>taketori.d_dining.customer_num</code>.
     */
    public final TableField<DDiningRecord, Integer> CUSTOMER_NUM = createField("customer_num", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>taketori.d_dining.dinner</code>.
     */
    public final TableField<DDiningRecord, String> DINNER = createField("dinner", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>taketori.d_dining.dinner_time</code>.
     */
    public final TableField<DDiningRecord, String> DINNER_TIME = createField("dinner_time", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>taketori.d_dining.dinner_place</code>.
     */
    public final TableField<DDiningRecord, String> DINNER_PLACE = createField("dinner_place", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>taketori.d_dining.breakfast_japanese</code>.
     */
    public final TableField<DDiningRecord, Integer> BREAKFAST_JAPANESE = createField("breakfast_japanese", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>taketori.d_dining.breakfast_western</code>.
     */
    public final TableField<DDiningRecord, Integer> BREAKFAST_WESTERN = createField("breakfast_western", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>taketori.d_dining.breakfast_time</code>.
     */
    public final TableField<DDiningRecord, String> BREAKFAST_TIME = createField("breakfast_time", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>taketori.d_dining.breakfast_place</code>.
     */
    public final TableField<DDiningRecord, String> BREAKFAST_PLACE = createField("breakfast_place", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>taketori.d_dining.lunch_num</code>.
     */
    public final TableField<DDiningRecord, Integer> LUNCH_NUM = createField("lunch_num", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>taketori.d_dining.lunch_time</code>.
     */
    public final TableField<DDiningRecord, String> LUNCH_TIME = createField("lunch_time", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>taketori.d_dining.memo</code>.
     */
    public final TableField<DDiningRecord, String> MEMO = createField("memo", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * Create a <code>taketori.d_dining</code> table reference
     */
    public DDining() {
        this(DSL.name("d_dining"), null);
    }

    /**
     * Create an aliased <code>taketori.d_dining</code> table reference
     */
    public DDining(String alias) {
        this(DSL.name(alias), D_DINING);
    }

    /**
     * Create an aliased <code>taketori.d_dining</code> table reference
     */
    public DDining(Name alias) {
        this(alias, D_DINING);
    }

    private DDining(Name alias, Table<DDiningRecord> aliased) {
        this(alias, aliased, null);
    }

    private DDining(Name alias, Table<DDiningRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Taketori.TAKETORI;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.D_DINING_DAYS_ROOM_NO_KEY, Indexes.D_DINING_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<DDiningRecord, Integer> getIdentity() {
        return Keys.IDENTITY_D_DINING;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<DDiningRecord> getPrimaryKey() {
        return Keys.D_DINING_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<DDiningRecord>> getKeys() {
        return Arrays.<UniqueKey<DDiningRecord>>asList(Keys.D_DINING_PKEY, Keys.D_DINING_DAYS_ROOM_NO_KEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DDining as(String alias) {
        return new DDining(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DDining as(Name alias) {
        return new DDining(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public DDining rename(String name) {
        return new DDining(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public DDining rename(Name name) {
        return new DDining(name, null);
    }
}
