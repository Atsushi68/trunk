/*
 * This file is generated by jOOQ.
*/
package com.taketoritei.order.jooq.tables;


import com.taketoritei.order.jooq.Taketori;
import com.taketoritei.order.jooq.tables.records.MRoomRecord;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MRoom extends TableImpl<MRoomRecord> {

    private static final long serialVersionUID = 1795999414;

    /**
     * The reference instance of <code>taketori.m_room</code>
     */
    public static final MRoom M_ROOM = new MRoom();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<MRoomRecord> getRecordType() {
        return MRoomRecord.class;
    }

    /**
     * The column <code>taketori.m_room.room_no</code>.
     */
    public final TableField<MRoomRecord, String> ROOM_NO = createField("room_no", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>taketori.m_room.floor</code>.
     */
    public final TableField<MRoomRecord, Integer> FLOOR = createField("floor", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * Create a <code>taketori.m_room</code> table reference
     */
    public MRoom() {
        this(DSL.name("m_room"), null);
    }

    /**
     * Create an aliased <code>taketori.m_room</code> table reference
     */
    public MRoom(String alias) {
        this(DSL.name(alias), M_ROOM);
    }

    /**
     * Create an aliased <code>taketori.m_room</code> table reference
     */
    public MRoom(Name alias) {
        this(alias, M_ROOM);
    }

    private MRoom(Name alias, Table<MRoomRecord> aliased) {
        this(alias, aliased, null);
    }

    private MRoom(Name alias, Table<MRoomRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Taketori.TAKETORI;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MRoom as(String alias) {
        return new MRoom(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MRoom as(Name alias) {
        return new MRoom(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public MRoom rename(String name) {
        return new MRoom(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public MRoom rename(Name name) {
        return new MRoom(name, null);
    }
}
