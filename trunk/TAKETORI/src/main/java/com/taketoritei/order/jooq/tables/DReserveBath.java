/*
 * This file is generated by jOOQ.
*/
package com.taketoritei.order.jooq.tables;


import com.taketoritei.order.jooq.Taketori;
import com.taketoritei.order.jooq.tables.records.DReserveBathRecord;

import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DReserveBath extends TableImpl<DReserveBathRecord> {

    private static final long serialVersionUID = 160778450;

    /**
     * The reference instance of <code>taketori.d_reserve_bath</code>
     */
    public static final DReserveBath D_RESERVE_BATH = new DReserveBath();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<DReserveBathRecord> getRecordType() {
        return DReserveBathRecord.class;
    }

    /**
     * The column <code>taketori.d_reserve_bath.reserve_date</code>.
     */
    public final TableField<DReserveBathRecord, String> RESERVE_DATE = createField("reserve_date", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>taketori.d_reserve_bath.time_cd</code>.
     */
    public final TableField<DReserveBathRecord, String> TIME_CD = createField("time_cd", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>taketori.d_reserve_bath.bath_cd</code>.
     */
    public final TableField<DReserveBathRecord, String> BATH_CD = createField("bath_cd", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>taketori.d_reserve_bath.room_no</code>.
     */
    public final TableField<DReserveBathRecord, String> ROOM_NO = createField("room_no", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>taketori.d_reserve_bath.del_flg</code>.
     */
    public final TableField<DReserveBathRecord, Boolean> DEL_FLG = createField("del_flg", org.jooq.impl.SQLDataType.BOOLEAN, this, "");

    /**
     * The column <code>taketori.d_reserve_bath.last_date</code>.
     */
    public final TableField<DReserveBathRecord, Timestamp> LAST_DATE = createField("last_date", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>taketori.d_reserve_bath.last_user</code>.
     */
    public final TableField<DReserveBathRecord, String> LAST_USER = createField("last_user", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>taketori.d_reserve_bath.reserve_count</code>.
     */
    public final TableField<DReserveBathRecord, Integer> RESERVE_COUNT = createField("reserve_count", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>taketori.d_reserve_bath.token</code>.
     */
    public final TableField<DReserveBathRecord, String> TOKEN = createField("token", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * Create a <code>taketori.d_reserve_bath</code> table reference
     */
    public DReserveBath() {
        this(DSL.name("d_reserve_bath"), null);
    }

    /**
     * Create an aliased <code>taketori.d_reserve_bath</code> table reference
     */
    public DReserveBath(String alias) {
        this(DSL.name(alias), D_RESERVE_BATH);
    }

    /**
     * Create an aliased <code>taketori.d_reserve_bath</code> table reference
     */
    public DReserveBath(Name alias) {
        this(alias, D_RESERVE_BATH);
    }

    private DReserveBath(Name alias, Table<DReserveBathRecord> aliased) {
        this(alias, aliased, null);
    }

    private DReserveBath(Name alias, Table<DReserveBathRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Taketori.TAKETORI;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DReserveBath as(String alias) {
        return new DReserveBath(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DReserveBath as(Name alias) {
        return new DReserveBath(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public DReserveBath rename(String name) {
        return new DReserveBath(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public DReserveBath rename(Name name) {
        return new DReserveBath(name, null);
    }
}
