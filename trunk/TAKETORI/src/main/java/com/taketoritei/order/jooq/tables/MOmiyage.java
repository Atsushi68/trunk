/*
 * This file is generated by jOOQ.
*/
package com.taketoritei.order.jooq.tables;


import com.taketoritei.order.jooq.Indexes;
import com.taketoritei.order.jooq.Keys;
import com.taketoritei.order.jooq.Taketori;
import com.taketoritei.order.jooq.tables.records.MOmiyageRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MOmiyage extends TableImpl<MOmiyageRecord> {

    private static final long serialVersionUID = -1214573139;

    /**
     * The reference instance of <code>taketori.m_omiyage</code>
     */
    public static final MOmiyage M_OMIYAGE = new MOmiyage();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<MOmiyageRecord> getRecordType() {
        return MOmiyageRecord.class;
    }

    /**
     * The column <code>taketori.m_omiyage.omiyage_id</code>.
     */
    public final TableField<MOmiyageRecord, Integer> OMIYAGE_ID = createField("omiyage_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('m_omiyage_omiyage_id_seq'::regclass)", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>taketori.m_omiyage.category</code>.
     */
    public final TableField<MOmiyageRecord, String> CATEGORY = createField("category", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>taketori.m_omiyage.image_ext</code>.
     */
    public final TableField<MOmiyageRecord, String> IMAGE_EXT = createField("image_ext", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>taketori.m_omiyage.price</code>.
     */
    public final TableField<MOmiyageRecord, Integer> PRICE = createField("price", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>taketori.m_omiyage.sort_omomi</code>.
     */
    public final TableField<MOmiyageRecord, Integer> SORT_OMOMI = createField("sort_omomi", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>taketori.m_omiyage.del_flg</code>.
     */
    public final TableField<MOmiyageRecord, Boolean> DEL_FLG = createField("del_flg", org.jooq.impl.SQLDataType.BOOLEAN, this, "");

    /**
     * The column <code>taketori.m_omiyage.last_date</code>.
     */
    public final TableField<MOmiyageRecord, Timestamp> LAST_DATE = createField("last_date", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>taketori.m_omiyage.last_user</code>.
     */
    public final TableField<MOmiyageRecord, String> LAST_USER = createField("last_user", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * Create a <code>taketori.m_omiyage</code> table reference
     */
    public MOmiyage() {
        this(DSL.name("m_omiyage"), null);
    }

    /**
     * Create an aliased <code>taketori.m_omiyage</code> table reference
     */
    public MOmiyage(String alias) {
        this(DSL.name(alias), M_OMIYAGE);
    }

    /**
     * Create an aliased <code>taketori.m_omiyage</code> table reference
     */
    public MOmiyage(Name alias) {
        this(alias, M_OMIYAGE);
    }

    private MOmiyage(Name alias, Table<MOmiyageRecord> aliased) {
        this(alias, aliased, null);
    }

    private MOmiyage(Name alias, Table<MOmiyageRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Taketori.TAKETORI;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.M_OMIYAGE_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<MOmiyageRecord, Integer> getIdentity() {
        return Keys.IDENTITY_M_OMIYAGE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<MOmiyageRecord> getPrimaryKey() {
        return Keys.M_OMIYAGE_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<MOmiyageRecord>> getKeys() {
        return Arrays.<UniqueKey<MOmiyageRecord>>asList(Keys.M_OMIYAGE_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MOmiyage as(String alias) {
        return new MOmiyage(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MOmiyage as(Name alias) {
        return new MOmiyage(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public MOmiyage rename(String name) {
        return new MOmiyage(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public MOmiyage rename(Name name) {
        return new MOmiyage(name, null);
    }
}
