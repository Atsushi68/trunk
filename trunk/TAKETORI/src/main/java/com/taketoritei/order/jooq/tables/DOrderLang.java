/*
 * This file is generated by jOOQ.
*/
package com.taketoritei.order.jooq.tables;


import com.taketoritei.order.jooq.Indexes;
import com.taketoritei.order.jooq.Keys;
import com.taketoritei.order.jooq.Taketori;
import com.taketoritei.order.jooq.tables.records.DOrderLangRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DOrderLang extends TableImpl<DOrderLangRecord> {

    private static final long serialVersionUID = 213428436;

    /**
     * The reference instance of <code>taketori.d_order_lang</code>
     */
    public static final DOrderLang D_ORDER_LANG = new DOrderLang();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<DOrderLangRecord> getRecordType() {
        return DOrderLangRecord.class;
    }

    /**
     * The column <code>taketori.d_order_lang.order_id</code>.
     */
    public final TableField<DOrderLangRecord, Integer> ORDER_ID = createField("order_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>taketori.d_order_lang.language</code>.
     */
    public final TableField<DOrderLangRecord, String> LANGUAGE = createField("language", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>taketori.d_order_lang.name</code>.
     */
    public final TableField<DOrderLangRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * Create a <code>taketori.d_order_lang</code> table reference
     */
    public DOrderLang() {
        this(DSL.name("d_order_lang"), null);
    }

    /**
     * Create an aliased <code>taketori.d_order_lang</code> table reference
     */
    public DOrderLang(String alias) {
        this(DSL.name(alias), D_ORDER_LANG);
    }

    /**
     * Create an aliased <code>taketori.d_order_lang</code> table reference
     */
    public DOrderLang(Name alias) {
        this(alias, D_ORDER_LANG);
    }

    private DOrderLang(Name alias, Table<DOrderLangRecord> aliased) {
        this(alias, aliased, null);
    }

    private DOrderLang(Name alias, Table<DOrderLangRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Taketori.TAKETORI;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.D_ORDER_LANG_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<DOrderLangRecord> getPrimaryKey() {
        return Keys.D_ORDER_LANG_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<DOrderLangRecord>> getKeys() {
        return Arrays.<UniqueKey<DOrderLangRecord>>asList(Keys.D_ORDER_LANG_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DOrderLang as(String alias) {
        return new DOrderLang(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DOrderLang as(Name alias) {
        return new DOrderLang(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public DOrderLang rename(String name) {
        return new DOrderLang(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public DOrderLang rename(Name name) {
        return new DOrderLang(name, null);
    }
}
